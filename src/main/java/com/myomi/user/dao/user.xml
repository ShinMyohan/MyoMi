<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserMapper">
	<resultMap id="User" type="User" autoMapping="true">
			<id property="id" column="id" javaType="String"/>
			<result property="pwd" column="pwd"/>
			<result property="name" column="name"/>
			<result property="tel" column="tel"/>
			<result property="email" column="email"/>
			<result property="addr" column="addr"/>
			<result property="role" column="role"/>
			<result property="createdDate" column="created_date"/>
			<result property="signoutDate" column="signout_date"/>
			<association property="membership" javaType="Membership" autoMapping="true">
			<id column="membership_num" property="membershipId" ></id>
			
</association>
	</resultMap>

	<!--회원 전체 조회-->
	<select id="selectAllUser" resultType="User">
	SELECT id, pwd,name,tel,email,addr,role,membership_num,created_date,signout_date 
	FROM users
	</select>
	
	<!--회원가입-->
	<insert id="insertUser" parameterType="User" keyProperty="id">
	INSERT INTO users (id,pwd,name,tel,email,addr,role,membership_num,created_date,signout_date) 
	VALUES (#{id}, #{pwd}, #{name}, #{tel}, #{email}, #{addr}, 0, 0, sysdate, null)
	</insert>
	
	
	<!--로그인하기/로그인하면 내정보 불러오기-->
	<select id = "selectLoginUser" resultMap="User">
	SELECT id, pwd, name, tel, email, addr, role, membership_num, created_date, signout_date from users 
	WHERE id = #{id} 
	AND pwd =#{pwd}
	</select>
	
	
	<!--아이디 찾기-->
	<select id="selectFindIdUser" resultType ="String">
	SELECT id from users 
	WHERE email=#{email}
	</select>
	
	<!--비밀번호 찾기-->
	<select id ="selectFindPwdUser" resultType ="String">
	SELECT pwd from users 
	WHERE id=#{id} 
	AND email=#{email}
	</select>
	
	<!--회원탈퇴(탈퇴일 업데이트)-->
	<update id ="updateSignoutUser">
	UPDATE users set signout_date = sysdate 
	WHERE id = #{id}
	</update>
	
	<!--내정보 변경하기-->
	<update id = "updateEditUser">
    UPDATE users set pwd = #{pwd} ,email = #{email} , tel = #{tel}
    WHERE id = #{id}
	</update>
	
	<!--내가쓴 상품리뷰 목록 조회-->
	<select id = "selectReviewByUser" resultType="map"> 
	SELECT num, title, created_date, stars, content 
	FROM review
    WHERE user_id = #{review.user.id}
	</select>	
	
	<!--마이페이지 상단정보, 주문목록, 주문상세정보  >p.name d.name-->
    <select id = "selectMypageOrderInfoByUser" resultType="map">
    SELECT u.name, m.membership_level, pt.total_point, count(distinct c.num) as "coupon_cnt", count(distinct f.seller_id) as "follow_cnt",
    o.created_date, o.num, p.name as "pname", p.origin_price, p.percentage, o.total_price, od.prod_cnt, p.status, o.options, se.company_name, 
    d.name as "dname", d.tel, d.addr, o.save_point
    FROM users u, membership m, point pt, coupon c, follow f, orders o, product p, orders_detail od, delivery d, seller_info se
    WHERE u.membership_num = m.membership_num
    AND u.id = pt.user_id
    AND u.id = c.user_id
    AND u.id = f.user_id
    AND o.num = od.order_num
    AND p.num = od.prod_num
    AND o.num = d.order_num
    AND u.id = o.user_id
    AND se.seller_id = p.seller_id
    AND c.status = 0
    AND u.id = #{id}
    GROUP BY u.name, m.membership_level, pt.total_point, o.created_date, o.num, p.name, p.origin_price, p.percentage, o.total_price, 
    od.prod_cnt, p.status, o.options, se.company_name, d.name, d.tel, d.addr, o.save_point order by created_date desc
	</select>
	
	
	<!--내가쓴 상품리뷰 제목으로 검색-->
 	<select id = "selectReviewFindTitleUser" resultType="map">
	SELECT num, title, created_date, stars from review
    WHERE title = #{review.title}
    AND user_id = #{review.user.id}
	</select> 
	
	<!---->
	
	
	
	
	
	
	
</mapper>