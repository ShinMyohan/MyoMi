<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ProductMapper">
	<!-- 페이징을 위한 totalCnt -->
	<select id="totalCntProduct" resultType="int">
		SELECT
		COUNT(*)
		FROM product
	</select>

	<!-- 상품목록 조회 -->
	<select id="selectAllProduct" resultType="java.util.LinkedHashMap">
		SELECT
		*
		FROM product
		ORDER BY num
		<!-- select *
		from (
		    select rownum rn, a.*
		    from (select * from product ORDER BY num) a
		) where rn between #{startRow} and #{endRow} -->
	</select>

	<!-- 상품 카테고리별 목록 조회 -->
	<select id="selectProductByCategory" resultType="java.util.LinkedHashMap">
		SELECT
		num, seller_id, category, name, origin_price,
		percentage,
		week, status, detail
		FROM product
		WHERE category =
		#{category}
		ORDER BY week
	</select>

	<!-- 상품 배송주차별 목록 조회 -->
	<select id="selectProductByWeek" resultType="java.util.LinkedHashMap">
		SELECT
		num, seller_id, category, name, origin_price,
		percentage,
		week, status, detail
		FROM product
		WHERE week = #{week}
		ORDER
		BY review_cnt desc
	</select>

	<!-- 상품 한개 상세조회 + 리뷰 목록 + 베스트리뷰 -->
	<select id="selectOneProduct" resultType="java.util.LinkedHashMap">
		SELECT p.num ProdNUM, si.company_name, p.category, p.name,
		p.origin_price, p.percentage, p.week, p.status,
		p.detail, p.review_cnt,
		p.stars, r.user_id, r.sort, r.title, r.content, r.created_date,
		r.stars,
		od.order_num, br.created_date
		FROM seller_info si
		LEFT JOIN product p ON si.seller_id
		= p.seller_id
		FULL OUTER JOIN orders_detail od ON p.num = od.prod_num
		FULL OUTER join review r ON od.order_num = r.order_num
		FULL OUTER JOIN
		best_review br ON r.num = br.review_num
		where p.num=#{num}
	</select>

	<!-- 판매자당 상품 수 count -->
	<select id="selectCntProductBySeller" resultType="int">
		select count(*) from product where
		seller_id=#{seller.user.id}
	</select>


	<!-- 상품 등록 -->
	<insert id="insertProduct">
		INSERT INTO product
		(num, seller_id, category, name, origin_price,
		percentage, week, status, detail, fee)
		VALUES
		(seq_product.nextval,
		#{seller.user.id}, #{category}, #{name}, #{originPrice},
		#{percentage}, #{week}, #{status}, #{detail}, 9)
	</insert>



	<!-- 상품 정보 업데이트 -->
	<update id="updateProduct">
		UPDATE product
		SET
		name=#{name}, category=#{category}, status=#{status}, detail=#{detail}
		WHERE num=#{num}
	</update>
</mapper>